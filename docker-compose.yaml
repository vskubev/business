version: "3.4"

services:
  #  Create a service named db.
  db:
    #   Use the Docker Image postgres. This will pull the newest release.
    image: "postgres"
    #   Give the container the name my_postgres. You can changes to something else.
    container_name: "my_postgres"
    #   Setup the username, password, and database name. You can changes these values.
    environment:
      - POSTGRES_USER=toxa
      - POSTGRES_PASSWORD=bernard94
      - POSTGRES_DB=business
    #   Maps port 54320 (localhost) to port 5432 on the container. You can change the ports to fix your needs.
    ports:
      - "54320:5432"
    #   Set a volume some that database is not lost after shutting down the container.
    #   I used the name postgres-data but you can changed it to something else.
    volumes:
      - ./postgres-data:/var/lib/postgresql/data

  # Create a message queue name rabbitmq
  # You can then access to GUI from your browser via http://{network-gateway-ip or container-ip}:15672 with rabbitmq:rabbitmq.
  rabbitmq:
    image: rabbitmq:3.7.5-management
    hostname: app-rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ./data/rabbitmq:/var/lib/rabbitmq/mnesia/rabbit@app-rabbitmq:cached
    environment:
      RABBITMQ_ERLANG_COOKIE: 6085e2412b6fa88647466c6a81c0cea0
      RABBITMQ_DEFAULT_USER: rabbitmq
      RABBITMQ_DEFAULT_PASS: rabbitmq
      RABBITMQ_DEFAULT_VHOST: /